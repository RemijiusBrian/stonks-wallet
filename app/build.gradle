plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
    id("kotlin-parcelize")
}

android {
    namespace 'dev.ridill.stonkswallet'
    compileSdk 33

    defaultConfig {
        applicationId "dev.ridill.stonkswallet"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.animation.ExperimentalAnimationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.ui.unit.ExperimentalUnitApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"]
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'

    // Jetpack Compose
    def compose_bom_version = '2022.12.00'
    implementation platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.foundation:foundation")
    implementation("androidx.compose.animation:animation")
    implementation("androidx.compose.material:material-icons-core")
    implementation("androidx.compose.material:material-icons-extended")
    implementation("androidx.compose.runtime:runtime-livedata")

    androidTestImplementation platform("androidx.compose:compose-bom:$compose_bom_version")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-tooling")

    // Compose Material 3
    def material_3_version = '1.1.0-alpha03'
    implementation("androidx.compose.material3:material3:$material_3_version")
    implementation("androidx.compose.material3:material3-window-size-class:$material_3_version")

    // Compose Navigation
    implementation('androidx.navigation:navigation-compose:2.5.3')

    // Accompanist
    def accompanist_version = '0.28.0'
    implementation("com.google.accompanist:accompanist-flowlayout:$accompanist_version")
    implementation("com.google.accompanist:accompanist-systemuicontroller:$accompanist_version")
    implementation("com.google.accompanist:accompanist-permissions:$accompanist_version")

    // Kotlin Coroutines
    def coroutines_version = '1.6.4'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("com.github.Zhuinden:flow-combinetuple-kt:1.1.1")

    // Lifecycle Components
    def lifecycle_version = '2.6.0-alpha03'
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    androidTestImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    // Preferences DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Room Persistence
    def room_version = "2.4.3"
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")

    // Splash Screen
    implementation("androidx.core:core-splashscreen:1.0.0")

    // Retrofit
    def retrofit_version = '2.9.0'
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")

    // Firebase
//    implementation platform('com.google.firebase:firebase-bom:31.1.0')
//    implementation("com.google.firebase:firebase-analytics-ktx")

    // Work Manager
    def work_version = "2.7.1"
    implementation("androidx.work:work-runtime-ktx:$work_version")
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Google Drive
    implementation 'com.google.api-client:google-api-client:2.1.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20221023-2.0.0'

    // Unit Tests
    implementation "androidx.test:core:1.5.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.mockito:mockito-core:4.10.0'

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}

kapt {
    correctErrorTypes = true
}